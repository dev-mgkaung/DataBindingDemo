apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

//Step 1- If youâ€™re using Kotlin, you should also add kotlin-kapt plugin:
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "jackpack.kotlin.databindingdemo"
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//Step 2- add databing
    dataBinding { enabled = true }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //KTX android Jackpark
    def ktx_version="1.2.0"
    implementation "androidx.core:core-ktx:$ktx_version"

   //Material Support Libiary
    def material_version="1.1.0"
    implementation "com.google.android.material:material:$material_version"

    // LiveData
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // lifecycle components
    implementation "android.arch.lifecycle:extensions:$lifecycle_version"
    kapt "android.arch.lifecycle:compiler:$lifecycle_version"

    //step 3- add gradle version
    def databinding_version = "3.2.1"   //For DataBinding
    kapt "androidx.databinding:databinding-common:$databinding_version"

    //GSON
    def gson_version = "2.8.6"
    implementation "com.google.code.gson:gson:$gson_version"

    //Retrofit
    def retrofit_version = "2.6.1"
    def retrofit_gson_version = "2.5.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    //Glide
    def glide_version = "4.11.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    //Paging lib JackPart
    def paging_version = "2.1.2"
    implementation "androidx.paging:paging-runtime:$paging_version"

    //Coroutines
    def coroutine_version="1.3.5"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutine_version"

    // Room components
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    //SwipeRefresh
    def swipe_version="1.0.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipe_version"

    // Work Manager
    def workmanager_version="2.3.1"
    implementation "androidx.work:work-runtime:$workmanager_version"

    //RxKotlin
    def rekotlin_version="2.4.0"
    def rxandroid_version="2.1.1"
    implementation "io.reactivex.rxjava2:rxkotlin:$rekotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"


    //Testing JUnit
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0-beta01'
}
